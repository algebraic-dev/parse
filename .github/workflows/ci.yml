name: ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
    build:
      name: Build
      strategy:
        fail-fast: false
        matrix:
          os: [windows-latest, ubuntu-latest, macos-latest]
      runs-on: ${{ matrix.os }}
      steps:
        - name: Prereqs Ubuntu
          if: matrix.os == 'ubuntu-latest'
          run: |
            set -o pipefail
            curl -sSfL https://github.com/leanprover/elan/releases/download/v1.4.2/elan-x86_64-unknown-linux-gnu.tar.gz | tar xz
            ./elan-init -y --default-toolchain none
            echo "$HOME/.elan/bin" >> $GITHUB_PATH
            sudo apt-get update
            sudo apt-get install -y --no-install-recommends libuv1-dev clang
            sudo update-alternatives --set cc /usr/bin/clang
        - name: Set up Homebrew
          if: matrix.os == 'macos-latest'
          uses: Homebrew/actions/setup-homebrew@master
        - name: Prereqs OSX
          if: matrix.os == 'macos-latest'
          run: brew install elan-init
        - name: Add msys2 to path (Windows)
          if: matrix.os == 'windows-latest'
          run: |
            Add-Content $env:GITHUB_PATH "C:\msys64\usr\bin"
            Add-Content $env:GITHUB_PATH "C:\msys64\mingw64\bin"
            Set-Content $env:GITHUB_ENV  "PKG_CONFIG_PATH=C:\msys64\usr\lib\pkgconfig"
        - name: Install gcc (Windows)
          if: matrix.os == 'windows-latest'
          run: pacman -v -S --noconfirm mingw-w64-x86_64-gcc mingw-w64-x86_64-pkg-config
        - name: Install Elan (Windows)
          if: matrix.os == 'windows-latest'
          shell: bash
          run: |
            curl -sSfL https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh | sh -s -- -y --default-toolchain none
            echo "$USERPROFILE\.elan\bin" >> $GITHUB_PATH
        - uses: actions/checkout@v4
        - name: Lake build
          run: lake build Parse